import { useMutation } from '@tanstack/react-query';

import type { AIServiceRecommendation } from '../types';

export interface AIServiceSuggestionParams {
  wedding_type: string;
  estimated_guests: number;
  estimated_budget: number;
  venue_type?: string;
  existing_services?: string[];
  special_requests?: string;
}

const generateServiceSuggestionsPrompt = (params: AIServiceSuggestionParams): string => {
  return `En tant qu'expert en organisation de mariages, g√©n√®re des suggestions de prestations suppl√©mentaires personnalis√©es.

CONTEXTE DU MARIAGE :
- Type de mariage : ${params.wedding_type}
- Nombre d'invit√©s estim√© : ${params.estimated_guests}
- Budget total estim√© : ${params.estimated_budget}‚Ç¨
- Type de lieu : ${params.venue_type || 'Non sp√©cifi√©'}
- Prestations d√©j√† pr√©vues : ${params.existing_services?.join(', ') || 'Aucune'}
- Demandes sp√©ciales : ${params.special_requests || 'Aucune'}

INSTRUCTIONS :
1. Sugg√®re 5-8 prestations suppl√©mentaires pertinentes pour ce type de mariage
2. Priorise les suggestions selon leur importance (1=faible, 5=critique)
3. Donne des fourchettes de prix r√©alistes pour chaque prestation
4. Inclus des conseils pratiques et des id√©es cr√©atives
5. Adapte les suggestions au type et au style de mariage
6. Consid√®re le budget disponible pour rester r√©aliste

FORMAT DE R√âPONSE attendu (JSON) :
{
  "wedding_type": "${params.wedding_type}",
  "suggestions": [
    {
      "service_name": "Nom de la prestation",
      "service_type": "Cat√©gorie (ex: D√©coration, Animation, etc.)",
      "description": "Description d√©taill√©e et conseils",
      "estimated_budget_min": 200,
      "estimated_budget_max": 800,
      "tips": ["Conseil 1", "Conseil 2", "Conseil 3"],
      "providers_suggestions": ["Type de prestataire 1", "Type de prestataire 2"],
      "priority_level": 3
    }
  ],
  "reasoning": "Explication g√©n√©rale de pourquoi ces prestations sont recommand√©es",
  "total_estimated_cost": 3500
}

R√©ponds uniquement en JSON valide, sans texte additionnel.`;
};

export const generateServiceSuggestions = async (
  params: AIServiceSuggestionParams
): Promise<AIServiceRecommendation> => {
  try {
    // Fallback data si l'IA n'est pas disponible
    const fallbackData: AIServiceRecommendation = {
      wedding_type: params.wedding_type,
      suggestions: [
        {
          service_name: "Fleuriste sp√©cialis√©",
          service_type: "Fleuriste",
          description: "Bouquets et compositions florales pour un mariage boh√©mien",
          estimated_budget_min: 300,
          estimated_budget_max: 800,
          tips: ["Privil√©gier les fleurs de saison", "Composer un bouquet de mari√©e unique"],
          providers_suggestions: ["Fleuristes locaux", "Fleuristes sp√©cialis√©s mariages"],
          priority_level: 3
        },
        {
          service_name: "√âclairage d'ambiance",
          service_type: "√âclairage",
          description: "√âclairage LED et guirlandes pour cr√©er une atmosph√®re magique",
          estimated_budget_min: 400,
          estimated_budget_max: 1200,
          tips: ["Tester l'√©clairage avant le jour J", "Pr√©voir des √©clairages de secours"],
          providers_suggestions: ["Techniciens √©clairage", "Soci√©t√©s de location"],
          priority_level: 4
        },
        {
          service_name: "Animation soir√©e",
          service_type: "Animation",
          description: "Animateur professionnel pour les jeux et ambiance",
          estimated_budget_min: 500,
          estimated_budget_max: 1000,
          tips: ["Briefer l'animateur sur vos go√ªts", "Pr√©voir des jeux pour tous les √¢ges"],
          providers_suggestions: ["Animateurs mariages", "DJ-animateurs"],
          priority_level: 2
        }
      ],
      reasoning: "Ces prestations compl√©mentaires apporteront une touche unique et personnalis√©e √† votre mariage.",
      total_estimated_cost: 2000
    };

    // Pour le moment, retourner les donn√©es de fallback
    // Plus tard, nous pourrons int√©grer l'appel IA r√©el ici
    console.log('ü§ñ G√©n√©ration de suggestions IA (mode fallback)');
    
    // Adapter le fallback au type de mariage
    const adaptedSuggestions = fallbackData.suggestions.map(suggestion => ({
      ...suggestion,
      description: `${suggestion.description} - Parfait pour un mariage ${params.wedding_type}`
    }));

    return {
      ...fallbackData,
      suggestions: adaptedSuggestions
    };

  } catch (error) {
    console.error('Erreur lors de la g√©n√©ration de suggestions IA:', error);
    throw new Error(
      error instanceof Error 
        ? error.message 
        : 'Erreur lors de la g√©n√©ration de suggestions'
    );
  }
};

export const useGenerateServiceSuggestions = () => {
  return useMutation({
    mutationFn: generateServiceSuggestions,
  });
}; 